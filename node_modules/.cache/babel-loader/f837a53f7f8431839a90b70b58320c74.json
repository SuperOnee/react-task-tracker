{"ast":null,"code":"var _jsxFileName = \"/Users/spongebob/Desktop/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask'; // function render\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appontment',\n    day: 'Oct 1st at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Oct 2nd at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Food Shopping',\n    day: 'Oct 1st at 2:30pm'\n  }]);\n  const [showAddTask, setShowAddTask] = useState(false); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 100000000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    console.log(newTask);\n    setTasks([...tasks, newTask]);\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // On Toggle\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : 'No task to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"U8fjX29KFTmPL/7Vet2svtg6Bfg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/spongebob/Desktop/react-task-tracker/src/App.js"],"names":["useState","React","Header","Tasks","AddTask","App","tasks","setTasks","id","text","day","reminder","showAddTask","setShowAddTask","addTask","task","Math","floor","random","newTask","console","log","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CACjC;AACEQ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,oBAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAbiC,CAAD,CAAlC;AAoBA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C,CArBgB,CAuBhB;;AACA,QAAMc,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMP,EAAE,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,IAAwC,CAAnD;AACA,UAAMC,OAAO,GAAG;AAAEX,MAAAA,EAAF;AAAM,SAAGO;AAAT,KAAhB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAZ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AACD,GALD,CAxBgB,CA+BhB;;;AACA,QAAMG,UAAU,GAAId,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACiB,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAhCgB,CAoChB;;;AACA,QAAMgB,cAAc,GAAIhB,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CACND,KAAK,CAACmB,GAAN,CAAWV,IAAD,IACRA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGO,IAAL;AAAWJ,MAAAA,QAAQ,EAAE,CAACI,IAAI,CAACJ;AAA3B,KAAjB,GAAyDI,IAD3D,CADM,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMF,cAAc,CAAC,CAACD,WAAF;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGR,KAAK,CAACoB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEpB,KAAd;AAAqB,MAAA,QAAQ,EAAEgB,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,iBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxDD;;GAAMnB,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport React from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n// function render\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctors Appontment',\n      day: 'Oct 1st at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Meeting at School',\n      day: 'Oct 2nd at 1:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Food Shopping',\n      day: 'Oct 1st at 2:30pm',\n    },\n  ])\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 100000000) + 1\n    const newTask = { id, ...task }\n    console.log(newTask)\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // On Toggle\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No task to show'\n      )}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}