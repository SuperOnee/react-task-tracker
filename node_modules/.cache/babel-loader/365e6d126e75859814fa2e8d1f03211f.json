{"ast":null,"code":"var _jsxFileName = \"/Users/spongebob/Desktop/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask'; // function render\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  useEffect(() => {\n    console.log('useEffect function');\n  }, []);\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n  const BASE_URL = 'http://localhost:5000'; // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch(BASE_URL + '/tasks');\n    const data = await res.json();\n    console.log('data', data);\n    return data;\n  }; // 使用useEffect hook获取数据, 没有依赖数据所以2nd参数传递空数组\n\n\n  useEffect(() => {\n    // closure\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Add Task\n\n  const addTask = async task => {\n    const res = await fetch(BASE_URL + '/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = res.json();\n    setTasks([...tasks, data]);\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`${BASE_URL}/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // On Toggle\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : 'No task to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ztzBfSQtYG7vPCwcMQ7s0m+V91I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/spongebob/Desktop/react-task-tracker/src/App.js"],"names":["useState","useEffect","React","Header","Tasks","AddTask","App","console","log","tasks","setTasks","showAddTask","setShowAddTask","BASE_URL","fetchTasks","res","fetch","data","json","getTasks","tasksFromServer","addTask","task","method","headers","body","JSON","stringify","deleteTask","id","filter","toggleReminder","map","reminder","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport React from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n// function render\nconst App = () => {\n  useEffect(() => {\n    console.log('useEffect function')\n  }, [])\n\n  const [tasks, setTasks] = useState([])\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const BASE_URL = 'http://localhost:5000'\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(BASE_URL + '/tasks')\n    const data = await res.json()\n    console.log('data', data)\n    return data\n  }\n\n  // 使用useEffect hook获取数据, 没有依赖数据所以2nd参数传递空数组\n  useEffect(() => {\n    // closure\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(BASE_URL + '/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = res.json()\n    setTasks([...tasks, data])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`${BASE_URL}/tasks/${id}`, {\n      method: 'DELETE',\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // On Toggle\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    )\n  }\n\n  return (\n    <div className='container'>\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No task to show'\n      )}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}